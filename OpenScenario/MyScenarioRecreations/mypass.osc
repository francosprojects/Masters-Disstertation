import basic.osc

scenario top:
    path: Path                 
    path.set_map("Town04")
    path.path_min_driving_lanes(2)

    ego_vehicle: Model3                 # ego car
    npc: Rubicon                        # The slow car
    npc2: Model3                       # The left lane car

    event start
    event end
    do parallel(duration: 60s):
        serial:
            slow: parallel(duration: 28s):
                npc.drive(path) with:
                    speed(30kph)
                    lane(2, at: start) # left to right: [1..n]
        serial:
            stay: parallel(duration: 15s):
                npc2.drive(path) with:
                    speed(32kph)
                    lane(left_of: npc, at: start)
                    position(30m, ahead_of: npc, at: start)
            slow2: parallel(duration: 13s):
                npc2.drive(path) with:
                    speed([12kph..24kph]) #15 fails, 25 passes
        
        serial:
            get_ahead: parallel(duration: 10s):
                ego_vehicle.drive(path) with:
                    speed(30kph)
                    lane(same_as: npc, at: start)
                    position(10m, behind: npc, at: start)
            
            change_lane1: parallel(duration: 6s):
                ego_vehicle.drive(path) with:
                    lane(left_of: npc, at: end)

            accelection: parallel(duration: 6s):
                ego_vehicle.drive(path) with:
                    speed(40kph)
                
            change_lane2: parallel(duration: 6s):
                ego_vehicle.drive(path) with:
                    lane(same_as: npc, at: end)
